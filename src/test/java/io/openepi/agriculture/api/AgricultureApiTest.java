/*
 * Agriculture API
 * This API is used to get aggregated data from Deforestation, Flood, Weather and Soil APIs.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.openepi.agriculture.api;

import io.openepi.agriculture.model.*;
import io.openepi.common.ApiException;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.BeforeEach;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import java.math.BigDecimal;

import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

/**
 * API tests for AgricultureApi
 */
public class AgricultureApiTest {

    @Mock
    private AgricultureApi api = new AgricultureApi();

    @BeforeEach
    public void setUp() throws Exception {
        MockitoAnnotations.openMocks(this);
    }

    /**
     * Get summary of agriculture data
     *
     * Gets aggregated data from Deforestation, Flood, Weather and Soil APIs. See the [API documentation](https://developer.openepi.io) for more information. There is an error field for each of the APIs. If a certain API does not respond, it will instead return with an error message in the field that belong to that API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSummaryTest() throws ApiException {
        BigDecimal lon = new BigDecimal("33.57");
        BigDecimal lat = BigDecimal.valueOf(-1.37);

        ModelsSummary mockResponse = new ModelsSummary();

        // Mock deforestation data
        ModelsDeforestation mockDeforestation = new ModelsDeforestation();
        mockDeforestation.setDaterangeTotTreeloss(new BigDecimal("123"));
        mockResponse.setDeforestation(mockDeforestation);

        // Mock flood data
        ModelsFlood mockFlood = new ModelsFlood();
        mockFlood.setIntensity(ModelsIntensityEnum.Y);
        mockFlood.setIssuedOn("Testdate");
        mockFlood.setPeakDay("Testday");
        mockFlood.setPeakTiming(ModelsPeakTimingEnum.BB);
        mockFlood.setPeakStep(1);
        mockResponse.setFlood(mockFlood);

        // Mock weather data
        ModelsWeather mockWeather = new ModelsWeather();
        mockWeather.setAirTemperature(new BigDecimal("123"));
        mockWeather.setCloudAreaFraction(new BigDecimal("123"));
        mockWeather.setPrecipitationAmount(new BigDecimal("123"));
        mockWeather.setRelativeHumidity(new BigDecimal("123"));
        mockWeather.setWindFromDirection(new BigDecimal("123"));
        mockWeather.setWindSpeed(new BigDecimal("123"));
        mockWeather.setWindSpeedOfGust(new BigDecimal("123"));
        mockResponse.setWeather(mockWeather);

        // Mock soil data
        ModelsSoilType mockSoil = new ModelsSoilType();
        mockSoil.setMostProbableSoilType("Dirt");
        mockResponse.setSoil(mockSoil);

        when(api.getSummary(lon, lat)).thenReturn(mockResponse);

        ModelsSummary response = api.getSummary(lon, lat);
        assertEquals(new BigDecimal("123"), response.getDeforestation().getDaterangeTotTreeloss());
    }
}
